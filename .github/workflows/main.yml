# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: |
          mvn -B package --file pom.xml
          mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v3
        with:
          name: staging
          path: staging
  deploy:
     runs-on: ubuntu-latest
     needs: [build]
     steps:
      - uses: actions/checkout@master
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: staging
          path: staging
      - run: ls -la
      - name: Deploy to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
          --recursive \
          --acl public-read \
          --region ap-south-1 \
          staging s3://sbawsdeployment
      - name: ls -a via ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            #sudo yum -y install java-1.8.0-openjdk
            wget https://sbawsdeployment.s3.ap-south-1.amazonaws.com/SpringBootGitHubActions-0.0.1-SNAPSHOT.jar
            ls 
            java -jar SpringBootGitHubActions-0.0.1-SNAPSHOT.jar